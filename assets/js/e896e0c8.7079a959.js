"use strict";(self.webpackChunksat=self.webpackChunksat||[]).push([[819],{895:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>n,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"motivation","title":"Overview","description":"Security Analysis Tool (SAT) analyzes customer\'s Databricks account and workspace security configurations and provides recommendations that help them follow Databrick\'s security best practices.","source":"@site/docs/motivation.mdx","sourceDirName":".","slug":"/motivation","permalink":"/security-analysis-tool/docs/motivation","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Functionality","permalink":"/security-analysis-tool/docs/functionality"}}');var r=s(4848),o=s(8453);s(9030);const n={sidebar_position:1},a="Overview",c={},d=[];function u(e){const t={a:"a",blockquote:"blockquote",em:"em",h1:"h1",header:"header",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"overview",children:"Overview"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Security Analysis Tool (SAT)"})," analyzes customer's Databricks account and workspace security configurations and provides recommendations that help them follow Databrick's security best practices."]}),"\n",(0,r.jsx)(t.p,{children:"When a customer runs SAT, it compares their workspace configurations against a set of security best practices and delivers a report for their Databricks workspaces on AWS, Azure, and GCP.\nThese checks identify opportunities and provide recommendations to harden Databricks configurations, services, and resources."}),"\n",(0,r.jsx)(t.p,{children:"Databricks has worked with thousands of customers to securely deploy its platform, leveraging security features that meet their architectural requirements.\nWhile security implementations may vary across organizations, there are commonly used guidelines and features adopted by organizations with high security standards."}),"\n",(0,r.jsx)(t.p,{children:"SAT checks for typical security configurations deployed by most high-security organizations. It highlights the most significant risks, and those most frequently asked about by customers.\nEach recommendation will include a security configuration reference link to the relevant Databricks documentation."}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Note:"})," SAT is a productivity tool designed to help verify your security configurations against Databricks\u2019 best practices. It is ",(0,r.jsx)(t.em,{children:"not"})," intended to serve as a certification or formal attestation of your deployment's security posture."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Please review the SAT report with your business stakeholders, administrators, security team and auditors. Assess your organizational security requirements carefully before making changes based on the report - not all deviations require mitigation.\nSome recommendations may have cost implications, and some of the security recommendations may have dependency limitations. Always thoroughly review the associated feature documentation before modifying your security configurations."}),"\n",(0,r.jsxs)(t.p,{children:["Refer to the Databricks ",(0,r.jsx)(t.a,{href:"https://www.databricks.com/trust",children:"Security and Trust Center"})," for additional resources and best practices."]}),"\n",(0,r.jsx)(t.p,{children:"The SAT project is regularly updated to improve check accuracy, add new checks, and fix bugs."}),"\n",(0,r.jsxs)(t.p,{children:["For feedback and comments, contact us at ",(0,r.jsx)(t.a,{href:"mailto:sat@databricks.com",children:"sat@databricks.com"})," or open a GitHub issue."]})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>n,x:()=>a});var i=s(6540);const r={},o=i.createContext(r);function n(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);